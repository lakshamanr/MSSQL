function ownKeys(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(n),!0).forEach((function(r){_defineProperty(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function _defineProperty(e,r,n){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,_toPropertyKey(t.key),t)}}function _createClass(e,r,n){return r&&_defineProperties(e.prototype,r),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){var r=_toPrimitive(e,"string");return"symbol"==typeof r?r:r+""}function _toPrimitive(e,r){if("object"!=typeof e||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,r||"default");if("object"!=typeof t)return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(e,r,n){e.exports=n("zUnb")},"1dAZ":function(e,r,n){"use strict";n.r(r),r.default='<amexio-accordion [multi-open]="true">\r\n  \x3c!-- Table Information --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table: {{tableName}}" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="cell">\r\n        <h5>\r\n          <img src="./assets/icons/Table.png" style="width: 30px !important;" />\r\n          {{tableName}}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Extended Properties --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Extended Properties" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Extended Properties Name</div>\r\n        <div class="cell">Extended Properties Value</div>\r\n        <div class="cell">Extended Properties of Table</div>\r\n        <div *ngIf="hasEditPermission" class="cell">Actions</div>\r\n      </div>\r\n      <div *ngFor="let description of descriptions" class="row">\r\n        <div class="cell">{{description.name}}</div>\r\n        <div class="cell">{{description.value}}</div>\r\n        <div class="cell">{{description.table}}</div>\r\n        <div *ngIf="hasEditPermission" class="cell">\r\n          <button type="button" (click)="editDescription(description)" pButton icon="pi pi-pencil"></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Objects Dependency Tree --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Objects Dependency Tree" [gradient]="true" [active]="true">\r\n    <p-tree [value]="filesTree" layout="horizontal" selectionMode="single"></p-tree>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Table Index Fragmentation --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Index Fragmentation" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Index Name</div>\r\n      </div>\r\n      <div *ngFor="let Property of tableFragmentations" class="row">\r\n        <div class="cell">\r\n          {{Property.indexName}}\r\n          <progress-bar [progress]="Property.percentFragmented" [color-degraded]="{\'0\': \'green\', \'50\': \'red\'}"></progress-bar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Table Properties --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Properties" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Property</div>\r\n        <div class="cell">Value</div>\r\n      </div>\r\n      <div *ngFor="let property of properties" class="row">\r\n        <div class="cell">{{property.name}}</div>\r\n        <div class="cell">{{property.value}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Table Columns --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Columns" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n\r\n        <div class="cell">Name</div> \r\n        <div class="cell">Data Type</div>\r\n        <div class="cell">Key</div>\r\n        <div class="cell">Max Length (Bytes)</div>\r\n        <div class="cell">Is Nullable</div>\r\n        <div class="cell">Identity</div>\r\n        <div class="cell">Default</div>\r\n        <div class="cell">Description</div>\r\n        <div *ngIf="hasEditPermission" class="cell">Actions</div>\r\n      </div>\r\n      <div *ngFor="let column of columns" class="row">\r\n        <div class="cell">{{column.columnName}}</div>\r\n        <div class="cell">{{column.dataType}}</div>\r\n        <div class="cell">{{column.key}}</div>\r\n        <div class="cell">{{column.maxLength}}</div>\r\n        <div class="cell">{{column.allowNulls}}</div>\r\n        <div class="cell">{{column.identity}}</div>\r\n        <div class="cell">{{column.default}}</div>\r\n        <div class="cell">{{column.description}}</div>\r\n        <div *ngIf="hasEditPermission" class="cell">\r\n          <button *ngIf="hasEditPermission" pButton type="button" icon="pi pi-pencil" (click)="editColumnDescription(column)"></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Table Indices --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Indices" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Name</div>\r\n        <div class="cell">Columns Name</div>\r\n        <div class="cell">Index Type</div>\r\n      </div>\r\n      <div *ngFor="let index of indices" class="row">\r\n        <div class="cell">{{index.indexName}}</div>\r\n        <div class="cell">{{index.columns}}</div>\r\n        <div class="cell">{{index.indexType}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Table Key Constraints --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Key Constraints" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Table View</div>\r\n        <div class="cell">Object Type</div>\r\n        <div class="cell">Constraint Type</div>\r\n        <div class="cell">Constraint Name</div>\r\n        <div class="cell">Details</div>\r\n      </div>\r\n      <div *ngFor="let constraint of tableconstraint" class="row">\r\n        <div class="cell">{{constraint.table_view}}</div>\r\n        <div class="cell">{{constraint.object_type}}</div>\r\n        <div class="cell">{{constraint.constraint_type}}</div>\r\n        <div class="cell">{{constraint.constraint_name}}</div>\r\n        <div class="cell">{{constraint.details}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  \x3c!-- Table Script --\x3e\r\n  \x3c!-- <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Table Script" [gradient]="true" [active]="true">\r\n    <app-sql-script-viewer [script]="createScript.script"></app-sql-script-viewer>\r\n  </amexio-accordion-tab> --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Create Script" [gradient]="true" [active]="true">\r\n    <div class="code-container">\r\n      <ngx-prism *ngIf="createScript.script">\r\n        {{ createScript.script }}\r\n      </ngx-prism>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n</amexio-accordion>\r\n<div *ngIf="hasEditPermission">\r\n  <app-edit-description-dialog\r\n  [displayDialog]="displayDialog"\r\n  [selectedDescription]="selectedDescription"\r\n  [hasEditPermission]="hasEditPermission"\r\n  (save)="saveDescription()"\r\n  (cancel)="cancelEdit()">\r\n</app-edit-description-dialog>\r\n\r\n<app-edit-column-description-dialog\r\n  [displayColumnDialog]="displayColumnDialog"\r\n  [selectedColumn]="selectedColumn"\r\n  (saveColumnDescription)="saveColumnDescription()"\r\n  (cancelColumnEdit)="cancelColumnEdit()">\r\n</app-edit-column-description-dialog>\r\n\r\n</div>\r\n'},"1wH8":function(e,r,n){"use strict";n.r(r),r.default='<select [(ngModel)]="selectedDatabase">\n    <option value="AdventureWorks2022">AdventureWorks2022</option>\n    <option value="MyDatabase">MyDatabase</option>\n  </select>\n  <button (click)="onChangeDatabase()">Change Database</button>'},"20Ps":function(e,r,n){"use strict";n.r(r),r.default="\r\n<app-procedure></app-procedure>"},"45n4":function(e,r,n){"use strict";n.r(r),r.default=""},"4Ori":function(e,r,n){"use strict";n.r(r),r.default='<amexio-accordion [multi-open]="true">\r\n  \x3c!-- Database Tab --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Database" [active]="true">\r\n    <div class="table">\r\n      <div class="cell">\r\n        <h3>\r\n          <p class="fa fa-database">\r\n            {{databaseMetaData.currentDatabaseName}}\r\n          </p>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Object Types" [active]="true">\r\n    <div class="table">\r\n      <div class="cell">\r\n        <ul>\r\n          <div *ngFor="let item of objectTypeItems">\r\n            <app-object-type-item [icon]="item.icon"\r\n                                  [label]="item.label"\r\n                                  [count]="item.count"\r\n                                  [visible]="item.visible">\r\n            </app-object-type-item>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Database Properties" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Property</div>\r\n        <div class="cell">Value</div>\r\n      </div>\r\n\r\n      <div *ngFor="let property of databaseMetaData.serverProperties" class="row">\r\n        <div class="cell" data-title="Property">{{property.name}}</div>\r\n        <div class="cell" data-title="Value">{{property.value}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Database Options" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Property</div>\r\n        <div class="cell">Value</div>\r\n      </div>\r\n\r\n      <div *ngFor="let option of databaseMetaData.serverAdvanceProperties" class="row">\r\n        <div class="cell" data-title="Property">{{option.name}}</div>\r\n        <div class="cell" data-title="Value">{{option.value}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  \x3c!-- Files Tab --\x3e\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Files" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Type</div>\r\n        <div class="cell">File Locations </div>\r\n        <div class="cell">Current Size</div>\r\n        <div class="cell">Max Size in MB</div>\r\n        <div class="cell">Growth Type</div>\r\n      </div>\r\n\r\n      <div *ngFor="let file of databaseMetaData.fileInformations" class="row">\r\n        <div class="cell" data-title="fileType">{{file.fileType}}</div>\r\n        <div class="cell" data-title="fileLocation">{{file.fileLocation}} MB</div>\r\n        <div class="cell" data-title="currentSizeMB">{{file.currentSizeMB}}</div>\r\n        <div class="cell" data-title="maxSizeMB">{{file.maxSizeMB}}</div>\r\n        <div class="cell" data-title="growthType">{{file.growthType}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n</amexio-accordion>\r\n'},"54qw":function(e,r,n){"use strict";n.r(r),r.default='<li *ngIf="visible">\r\n    <div>\r\n      <img [src]="icon" />\r\n      <a>{{ label }}</a>\r\n      <i *ngIf="count" class="fa fa-5x fa-border icon-grey badge">\r\n        {{ count }}\r\n      </i>\r\n    </div>\r\n  </li>'},"6G/g":function(e,r,n){"use strict";n.r(r),r.default='<div class=" ">\r\n    <div class="cell">  \r\n      <amexio-tree-filter-view [data-reader]="\'data\'"\r\n                               (nodeClick)="getNodeData($event)"\r\n                               [data]="leftmenujsonvalues">\r\n      </amexio-tree-filter-view> \r\n    </div>\r\n  </div>'},"8EKO":function(e,r,n){"use strict";n.r(r),r.default=".table {\r\n  margin: 0px 0 3px 0;\r\n  width: 100%;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n  display: table;\r\n}\r\n\r\n@media screen and (max-width: 580px) {\r\n  .table {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.row {\r\n  display: table-row;\r\n  background: #f6f6f6;\r\n}\r\n\r\n.row:nth-of-type(odd) {\r\n    background: #e9e9e9;\r\n  }\r\n\r\n.row.header {\r\n    font-weight: 900;\r\n    color: #ffffff;\r\n    background: #184569 !important;\r\n  }\r\n\r\n.row.green {\r\n    background: #27ae60;\r\n  }\r\n\r\n.row.blue {\r\n    background: #2980b9;\r\n  }\r\n\r\n@media screen and (max-width: 580px) {\r\n  .row {\r\n    padding: 14px 0 7px;\r\n    display: block;\r\n  }\r\n\r\n    .row.header {\r\n      padding: 0;\r\n      height: 6px;\r\n    }\r\n\r\n      .row.header .cell {\r\n        display: none;\r\n      }\r\n\r\n    .row .cell {\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n      .row .cell:before {\r\n        margin-bottom: 3px;\r\n        content: attr(data-title);\r\n        min-width: 98px;\r\n        font-size: 10px;\r\n        line-height: 10px;\r\n        font-weight: bold;\r\n        text-transform: uppercase;\r\n        color: #969696;\r\n        display: block;\r\n      }\r\n}\r\n\r\n.cell {\r\n  /*  padding: 6px 12px; */\r\n  display: table-cell;\r\n}\r\n\r\n@media screen and (max-width: 580px) {\r\n  .cell {\r\n    padding: 2px 16px;\r\n    display: block;\r\n  }\r\n}\r\n\r\na.btn:hover {\r\n  -webkit-transform: scale(1.1);\r\n  -moz-transform: scale(1.1);\r\n  -o-transform: scale(1.1);\r\n}\r\n\r\na.btn {\r\n  -webkit-transform: scale(0.8);\r\n  -moz-transform: scale(0.8);\r\n  -o-transform: scale(0.8);\r\n  -webkit-transition-duration: 0.5s;\r\n  -moz-transition-duration: 0.5s;\r\n  -o-transition-duration: 0.5s;\r\n}\r\n\r\n#RotateDiv {\r\n  /* background-color: yellow;\r\n  border: 1px solid black;\r\n  -webkit-transform: rotateZ(90deg);  \r\n  transform: rotateZ(90deg);   */\r\n}\r\n\r\nh4 {\r\n  text-align: center;\r\n  margin: 0 0 8px 0;\r\n}\r\n\r\n.ui-inputtext {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  font-size: 12px;\r\n}\r\n\r\n.progress-inner {\r\n  min-width: 1% !important;\r\n}\r\n\r\n/* Code container for improved readability */\r\n\r\n.code-container {\r\n  max-height: 400px;  /* Prevents excessive scrolling */\r\n  overflow-y: auto;  /* Enables vertical scroll when needed */\r\n  padding: 10px;\r\n  background-color: #2d2d2d; /* Dark background for contrast */\r\n  border-radius: 5px;\r\n  border: 1px solid #444;\r\n}\r\n\r\n/* ngx-prism styling for better text display */\r\n\r\nngx-prism {\r\n  display: block;\r\n  white-space: pre-wrap !important; /* Ensures proper line breaks */\r\n  word-wrap: break-word !important; /* Prevents long lines from breaking UI */\r\n  overflow-x: auto; /* Enables horizontal scroll for very long SQL statements */\r\n  background: #272822 !important; /* Dark theme for syntax highlighting */\r\n  color: #f8f8f2 !important; /* Light text for readability */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  line-height: 1.5; /* Increases spacing for better readability */\r\n  font-family: 'Courier New', Courier, monospace;\r\n}\r\n\r\n/* Scrollbar customization for better UX */\r\n\r\nngx-prism::-webkit-scrollbar {\r\n  width: 6px;\r\n  height: 6px;\r\n}\r\n\r\nngx-prism::-webkit-scrollbar-thumb {\r\n  background: #555;\r\n  border-radius: 3px;\r\n}\r\n\r\nngx-prism::-webkit-scrollbar-track {\r\n  background: #222;\r\n}\r\n"},"A/qk":function(e,r,n){"use strict";n.r(r),r.default='<footer class="footer"> \r\n   \r\n  </footer>\r\n'},A3xY:function(e,r,n){"use strict";n.r(r),r.default="/* Base styles */\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 25px); /* Adjust height to fit between header and footer */\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n.split-example {\r\n  height: 100%;\r\n  margin-left: 5px !important;\r\n}\r\n/* Split bar visibility */\r\n.HideSplitBar {\r\n  flex: 0 0 0 !important;\r\n}\r\n.HideSplitBar div {\r\n  display: none !important;\r\n}\r\n.showSplitBar div {\r\n  display: block !important;\r\n}\r\n/* Full-page and partial modes */\r\n.ShowFullPageMode {\r\n  order: 2;\r\n  flex: 0 0 calc(100% - 15px) !important;\r\n}\r\n/* Scrollbar styling */\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n.setWindowHeight {\r\n  height: calc(100vh - 1px); /* Adjust height dynamically */\r\n  overflow-y: auto;\r\n}\r\n.scrollbar {\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n/* Responsive adjustments for small screens */\r\n@media (max-width: 767px) {\r\n  .body-content {\r\n    padding-top: 50px; /* Space for the nav menu */\r\n  }\r\n}\r\n/* Responsive layout adjustments */\r\n@media only screen and (max-width: 600px) {\r\n  #leftMenu, #asSplitArea2 {\r\n    flex: 0 0 50%;\r\n  }\r\n}\r\n@media only screen and (min-width: 601px) and (max-width: 1200px) {\r\n  #leftMenu {\r\n    flex: 0 0 30%;\r\n  }\r\n  #asSplitArea2 {\r\n    flex: 0 0 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 1201px) {\r\n  #leftMenu {\r\n    flex: 0 0 25%;\r\n  }\r\n  #asSplitArea2 {\r\n    flex: 0 0 75%;\r\n  }\r\n}\r\n"},AMUZ:function(e,r,n){"use strict";n.r(r),r.default='<p-dialog header="Edit Description"\r\n          [(visible)]="displayDialog"\r\n          modal="true"\r\n          [responsive]="true"\r\n          styleClass="custom-dialog"\r\n          [style]="{width: \'350px\', minWidth: \'200px\'}"\r\n          [minY]="70"\r\n          [maximizable]="true"\r\n          [baseZIndex]="10000">\r\n  <div class="p-fluid">\r\n    <div class="p-formgrid p-grid">\r\n      <div class="p-field p-col">\r\n        <label for="name">Extended Properties Name</label>\r\n        <textarea rows="5"\r\n                  cols="30"\r\n                  [disabled]="true"\r\n                  pInputTextarea\r\n                  [autoResize]="true"\r\n                  [(ngModel)]="selectedDescription.name"\r\n                  placeholder="Enter name">\r\n        </textarea>\r\n      </div>\r\n      <div class="p-field p-col">\r\n        <label for="value">Extended Properties Value</label>\r\n        <textarea rows="5"\r\n                  cols="30"\r\n                  pInputTextarea\r\n                  [autoResize]="true"\r\n                  [(ngModel)]="selectedDescription.value"\r\n                  placeholder="Enter value">\r\n        </textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <p-footer>\r\n    <button *ngIf="hasEditPermission"\r\n            pButton\r\n            label="Save"\r\n            icon="pi pi-check"\r\n            (click)="saveDescription()"\r\n            class="p-button-success">\r\n    </button>\r\n    <button pButton\r\n            label="Cancel"\r\n            icon="pi pi-times"\r\n            class="p-button-secondary"\r\n            (click)="cancelEdit()">\r\n    </button>\r\n  </p-footer>\r\n</p-dialog>\r\n'},AOA5:function(e,r,n){"use strict";n.r(r),r.default=""},HJxH:function(e,r,n){"use strict";n.r(r),r.default=""},KVNU:function(e,r,n){"use strict";n.r(r),r.default="\r\n#Objects li:last-child {\r\n    display: none;\r\n  }\r\n  .table {\r\n  margin:  0px 0 3px 0;\r\n    width: 100%;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n    display: table;\r\n  }\r\n  @media screen and (max-width: 580px) {\r\n    .table {\r\n      display: block;\r\n    }\r\n  }\r\n  .row {\r\n    display: table-row;\r\n    background: #f6f6f6;\r\n  }\r\n  .row:nth-of-type(odd) {\r\n      background: #e9e9e9;\r\n    }\r\n  .row.header {\r\n      font-weight: 900;\r\n      color: #ffffff;\r\n      background: #184569 !important;\r\n    }\r\n  .row.green {\r\n      background: #27ae60;\r\n    }\r\n  .row.blue {\r\n      background: #2980b9;\r\n    }\r\n  @media screen and (max-width: 580px) {\r\n    .row {\r\n      padding: 14px 0 7px;\r\n      display: block;\r\n    }\r\n  \r\n      .row.header {\r\n        padding: 0;\r\n        height: 6px;\r\n      }\r\n  \r\n        .row.header .cell {\r\n          display: none;\r\n        }\r\n  \r\n      .row .cell {\r\n        margin-bottom: 10px;\r\n      }\r\n  \r\n        .row .cell:before {\r\n          margin-bottom: 3px;\r\n          content: attr(data-title);\r\n          min-width: 98px;\r\n          font-size: 10px;\r\n          line-height: 10px;\r\n          font-weight: bold;\r\n          text-transform: uppercase;\r\n          color: #969696;\r\n          display: block;\r\n        }\r\n  }\r\n  .cell {\r\n  /*  padding: 6px 12px; */\r\n    display: table-cell;\r\n  }\r\n  @media screen and (max-width: 580px) {\r\n    .cell {\r\n      padding: 2px 16px;\r\n      display: block;\r\n    }\r\n  }\r\n  .node:hover {\r\n    fill: #ec008c;\r\n    opacity: 1;\r\n  }\r\n  .modal-dialog {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .modal-content {\r\n    height: auto;\r\n    min-height: 100%;\r\n    border: 0 none;\r\n    border-radius: 0;\r\n    box-shadow: none;\r\n  }\r\n  "},QNDt:function(e,r,n){"use strict";n.r(r),r.default=""},VzVu:function(e,r,n){"use strict";n.r(r),r.default='<app-header></app-header>\r\n<div id="main-content">  \r\n  <ngx-ui-loader></ngx-ui-loader>\r\n  <div style="margin-left: initial; margin-top: 5px;">\r\n    <div class="split-example ex-percent">\r\n      <as-split unit="percent"\r\n                direction="horizontal"\r\n                #split="asSplit"\r\n                gutterSize="10"\r\n                [gutterDblClickDuration]="dblClickTime"\r\n                [useTransition]="useTransition"\r\n                (dragStart)="log(\'dragStart\', $event)"\r\n                (dragEnd)="log(\'dragEnd\', $event)"\r\n                (gutterClick)="log(\'gutterClick\', $event)"\r\n                (gutterDblClick)="log(\'gutterDblClick\', $event)"\r\n                (transitionEnd)="log(\'transitionEnd\', $event)"> \r\n        \r\n                <as-split-area [ngClass]="status ? \'HideSplitBar\' : \'showSplitBar\'" size="25" #area1="asSplitArea">\r\n                  <div class="scollbar scrollbar-primary pre-scrollable leftmenuExtendedProperties setWindowHeight" id="leftMenu">\r\n                    <app-leftmenu></app-leftmenu>\r\n                  </div>\r\n                </as-split-area>\r\n                <as-split-area size="75" [ngClass]="status ? \'ShowFullPageMode\' : \'RemoveFullPageMode\'" #area2="asSplitArea" id="asSplitArea2">\r\n                  <div class="scollbar scrollbar-primary setWindowHeight">\r\n                    <div id="center">\r\n                      <app-main-page></app-main-page>\r\n                    </div>\r\n                  </div>\r\n                </as-split-area>\r\n       \r\n      </as-split>\r\n    </div>\r\n    <hr />\r\n  </div>\r\n</div>\r\n'},WBBz:function(e,r,n){"use strict";n.r(r),r.default='<amexio-accordion [multi-open]="true">\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Stored Procedure " [gradient]="true" [active]="true">\r\n\r\n    <div class="table">\r\n      <div class="cell">\r\n        <div>\r\n          <h5>\r\n            <img src="./assets/icons/StoredProcedure.png" style="width: 30px !important;">\r\n            {{storedProcedureName}}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  <amexio-accordion-tab amexioColorPalette\r\n                        [color-palette]="\'\'"\r\n                        header="MS Description"\r\n                        [gradient]="true"\r\n                        [active]="true">\r\n\r\n    \x3c!-- Display Mode --\x3e\r\n    <ng-container *ngIf="!iblnShowEditBox; else editMode">\r\n      <div class="description-container">\r\n        <a (click)="toggleEditBox()" class="edit-icon">\r\n          <i class="fa fa-edit"></i>\r\n        </a>\r\n        <p class="description-text">\r\n          {{ storedProcedureMetadata?.storedProcedureInfo?.extendedProperty }}\r\n        </p>\r\n      </div>\r\n    </ng-container>\r\n\r\n    \x3c!-- Edit Mode --\x3e\r\n    <ng-template #editMode>\r\n      <div class="edit-container">\r\n        <textarea class="form-control edit-textarea"\r\n                  rows="4"\r\n                  [(ngModel)]="storedProcedureMetadata.storedProcedureInfo.extendedProperty">\r\n      </textarea>\r\n\r\n        <div class="action-buttons">\r\n          <a (click)="CancelStoreProcMsDesciption()" class="cancel-btn">\r\n            <i class="fa fa-2x fa-times"></i>\r\n          </a>\r\n          <a (click)="updateProcedureDescription()" class="save-btn">\r\n            <i class="fa fa-2x fa-save"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n  </amexio-accordion-tab>\r\n\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Objects dependncy Tree" [gradient]="true" [active]="true">\r\n    <p-tree [value]="filesTree"\r\n            layout="horizontal"\r\n            selectionMode="single">\r\n    </p-tree>\r\n  </amexio-accordion-tab>\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Parameters" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Edit</div>\r\n        <div class="cell">Name</div>\r\n        <div class="cell">Type</div>\r\n        <div class="cell">Max Length (Bytes)</div>\r\n        <div class="cell">Parameter Order</div>\r\n        <div class="cell">Collation</div>\r\n        <div class="cell">MS Description</div>\r\n      </div>\r\n\r\n      <div *ngFor="let property of storedProcedureMetadata?.parameters" class="row">\r\n        \x3c!-- Edit Button at the Front --\x3e\r\n        <div class="cell edit-cell">\r\n          <a (click)="toggleParameterEdit(property)" class="edit-icon">\r\n            <span class="fa fa-edit"></span>\r\n          </a>\r\n        </div>\r\n        <div class="cell">{{ property.parameterName }}</div>\r\n        <div class="cell">{{ property.type }}</div>\r\n        <div class="cell">{{ property.length }}</div>\r\n        <div class="cell">{{ property.parameterOrder }}</div>\r\n        <div class="cell">{{ property.collation }}</div>\r\n\r\n        \x3c!-- MS Description Column --\x3e\r\n        <div class="cell">\r\n          <div *ngIf="!property.isEditing">\r\n            <p>{{ property.extendedProperty }}</p>\r\n          </div>\r\n\r\n          <div *ngIf="property.isEditing">\r\n            <textarea class="edit-textarea" [(ngModel)]="property.extendedProperty"></textarea>\r\n\r\n            <div class="action-buttons">\r\n              <a (click)="toggleParameterEdit(property)" class="cancel-btn">\r\n                <i class="fa fa-times"></i>\r\n              </a>\r\n              <a (click)="updateParameterDescription(property)" class="save-btn">\r\n                <i class="fa fa-save"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Create Script" [gradient]="true" [active]="true">\r\n    <div class="code-container">\r\n      <ngx-prism *ngIf="storedProcedureMetadata?.createScript?.procedureDefinition" [language]="\'sql\'">\r\n        {{ storedProcedureMetadata?.createScript?.procedureDefinition }}\r\n      </ngx-prism>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Used by " [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell"> Referenced object name </div>\r\n      </div>\r\n      <div *ngFor="let property of storedProcedureMetadata?.dependencies " class="row">\r\n        <div class="cell"> {{property.referencedObjectName}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n  \r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Execution Plan" [gradient]="true" [active]="true">\r\n    <div class="execution-plan-container">\r\n      <div id="container"></div>\r\n    </div>\r\n  </amexio-accordion-tab>\r\n</amexio-accordion>\r\n'},XdeO:function(e,r,n){"use strict";n.r(r),r.default="/* ===== General Table Styling ===== */\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n}\r\n/* ===== Table Row Styles ===== */\r\n.row {\r\n  display: table-row;\r\n  background: #f6f6f6;\r\n}\r\n.row:nth-of-type(odd) {\r\n  background: #e9e9e9;\r\n}\r\n.row.header {\r\n  font-weight: 900;\r\n  color: #ffffff;\r\n  background: #184569;\r\n}\r\n/* Additional Row Styles */\r\n.row.green {\r\n  background: #27ae60;\r\n}\r\n.row.blue {\r\n  background: #2980b9;\r\n}\r\n/* ===== Table Cells ===== */\r\n.cell {\r\n  display: table-cell;\r\n  padding: 6px 12px;\r\n}\r\n/* ===== Edit Button Positioning ===== */\r\n.edit-cell {\r\n  text-align: center;\r\n  width: 50px;\r\n}\r\n/* Edit Icon Styles */\r\n.edit-icon {\r\n  font-size: 18px;\r\n  color: #007bff;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n}\r\n.edit-icon:hover {\r\n  color: #0056b3;\r\n}\r\n/* ===== Description Container for Editable Fields ===== */\r\n.description-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #f1f1f1;\r\n  border-radius: 5px;\r\n  flex-wrap: wrap;\r\n}\r\n.description-text {\r\n  max-width: 80%;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n/* ===== Edit Mode Styles ===== */\r\n.edit-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: auto;\r\n}\r\n.edit-textarea {\r\n  width: 100%;\r\n  resize: vertical;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n}\r\n/* ===== Action Buttons (Save & Cancel) ===== */\r\n.action-buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n}\r\n.action-buttons a {\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  font-size: 16px;\r\n}\r\n.cancel-btn i {\r\n  color: #d9534f;\r\n}\r\n.save-btn i {\r\n  color: #5cb85c;\r\n}\r\n.cancel-btn i:hover {\r\n  color: #c9302c;\r\n}\r\n.save-btn i:hover {\r\n  color: #449d44;\r\n}\r\n/* ===== Responsive Table Adjustments ===== */\r\n@media screen and (max-width: 580px) {\r\n  .table {\r\n    display: block;\r\n  }\r\n\r\n  .row {\r\n    padding: 14px 0 7px;\r\n    display: block;\r\n  }\r\n\r\n  .row.header {\r\n    padding: 0;\r\n    height: 6px;\r\n  }\r\n\r\n  .row.header .cell {\r\n    display: none;\r\n  }\r\n\r\n  .row .cell {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .row .cell:before {\r\n    margin-bottom: 3px;\r\n    content: attr(data-title);\r\n    min-width: 98px;\r\n    font-size: 10px;\r\n    line-height: 10px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    color: #969696;\r\n    display: block;\r\n  }\r\n\r\n  .cell {\r\n    padding: 2px 16px;\r\n    display: block;\r\n  }\r\n}\r\n/* ===== Button Hover Effects ===== */\r\na.btn {\r\n  transition: transform 0.5s;\r\n}\r\na.btn:hover {\r\n  transform: scale(1.1);\r\n}\r\n/* ===== Headings ===== */\r\nh4 {\r\n  text-align: center;\r\n  margin: 0 0 8px 0;\r\n}\r\n/* ===== Input Field Adjustments ===== */\r\n.ui-inputtext {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  font-size: 12px;\r\n}\r\n/* ===== Progress Bar Fixes ===== */\r\n.progress-inner {\r\n  min-width: 1% !important;\r\n}\r\n/* Ensure the textarea fits inside the cell */\r\n.edit-textarea {\r\n  width: 100%;\r\n  min-height: 50px;\r\n  max-height: 100px;\r\n  resize: vertical;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  word-wrap: break-word;\r\n  white-space: normal;\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Prevents overflow beyond parent cell */\r\n}\r\n/* Align action buttons properly */\r\n.action-buttons {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  gap: 10px; /* Adds space between buttons */\r\n}\r\n/* Adjust Cancel (X) and Save (\ud83d\udcbe) Icons */\r\n.action-buttons a {\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n.cancel-btn i {\r\n  color: #d9534f;\r\n}\r\n.save-btn i {\r\n  color: #5cb85c;\r\n}\r\n.cancel-btn i:hover {\r\n  color: #c9302c;\r\n}\r\n.save-btn i:hover {\r\n  color: #449d44;\r\n}\r\n/* Container for code block */\r\n.code-container {\r\n  max-height: 400px;  /* Prevents excessive scrolling */\r\n  overflow-y: auto;  /* Enables vertical scroll if content is too long */\r\n  padding: 10px;\r\n  background-color: #2d2d2d; /* Dark background for readability */\r\n  border-radius: 5px;\r\n  border: 1px solid #444;\r\n}\r\n/* Ensures ngx-prism styles correctly */\r\nngx-prism {\r\n  display: block;\r\n  white-space: pre-wrap !important; /* Prevents horizontal scrolling */\r\n  word-wrap: break-word !important;\r\n  overflow-x: hidden; /* Ensures content does not overflow horizontally */\r\n  background: #272822 !important; /* Dark background for contrast */\r\n  color: #f8f8f2 !important; /* Light text for readability */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  line-height: 1.5; /* Adjust line height for better readability */\r\n  font-family: 'Courier New', Courier, monospace;\r\n}\r\n/* Hide unnecessary horizontal scrollbar */\r\nngx-prism::-webkit-scrollbar {\r\n  width: 6px;\r\n  height: 6px;\r\n}\r\nngx-prism::-webkit-scrollbar-thumb {\r\n  background: #555;\r\n  border-radius: 3px;\r\n}\r\nngx-prism::-webkit-scrollbar-track {\r\n  background: #222;\r\n}\r\n"},YBPu:function(e,r,n){"use strict";n.r(r),r.default=""},bFcN:function(e,r,n){"use strict";n.r(r),r.default=""},crnd:function(e,r){function n(e){return Promise.resolve().then((function(){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}))}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="crnd"},dIbF:function(e,r,n){"use strict";n.r(r),r.default='<p-dialog header="Edit Column Description"\r\n          [(visible)]="displayColumnDialog"\r\n          modal="true"\r\n          [responsive]="true"\r\n          styleClass="custom-dialog"\r\n          [style]="{width: \'350px\', minWidth: \'200px\'}"\r\n          [minY]="70"\r\n          [maximizable]="true"\r\n          [baseZIndex]="10000">\r\n  <div class="p-fluid">\r\n    <div class="p-formgrid p-grid">\r\n      <div class="p-field p-col">\r\n        <label for="value">Column Extended Properties Value</label>\r\n        <textarea rows="5"\r\n                  cols="30"\r\n                  pInputTextarea\r\n                  [autoResize]="true"\r\n                  [(ngModel)]="selectedColumn.description"\r\n                  placeholder="Enter Description">\r\n        </textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <p-footer>\r\n    <button pButton\r\n            label="Save"\r\n            icon="pi pi-check"\r\n            (click)="saveDescription()"\r\n            class="p-button-success">\r\n    </button>\r\n    <button pButton\r\n            label="Cancel"\r\n            icon="pi pi-times"\r\n            class="p-button-secondary"\r\n            (click)="cancelEdit()">\r\n    </button>\r\n  </p-footer>\r\n</p-dialog>\r\n'},eXlM:function(e,r,n){"use strict";n.r(r),r.default="<p>view works!</p>\r\n"},iZmm:function(e,r,n){"use strict";n.r(r),r.default=""},lQhO:function(e,r,n){"use strict";n.r(r),r.default='<div class="table">\r\n    <div class="row">\r\n      <pre>{{ script }}</pre>\r\n    </div>\r\n  </div>\r\n '},nuPB:function(e,r,n){"use strict";n.r(r),r.default=" /* Style for table header */\r\n .p-table thead th {\r\n    text-align: left;\r\n    padding: 8px;\r\n    background-color: #f4f4f4;\r\n  }\r\n /* Style for table cells */\r\n .p-table td {\r\n    padding: 8px;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n /* Style for the expanded row content */\r\n .table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 10px;\r\n  }\r\n .table .row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n .table .header {\r\n    font-weight: bold;\r\n    background-color: #f4f4f4;\r\n  }\r\n .table .cell {\r\n    padding: 8px;\r\n    border-bottom: 1px solid #ddd;\r\n    flex: 1;\r\n  }\r\n .table .row:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n .table .row:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n /* Add hover effect for row togglers */\r\n .p-table a {\r\n    text-decoration: none;\r\n    color: #007bff;\r\n  }\r\n .p-table a:hover {\r\n    text-decoration: underline;\r\n  }"},"s+rH":function(e,r,n){"use strict";n.r(r),r.default='<header class="header">\r\n  \x3c!--<div class="sql-settings">\r\n    <label for="sql-server">Select Database:</label>\r\n    <select id="sql-server" (change)="onChangeServer($event)">\r\n      <option value="server1">SQL Server 1</option>\r\n      <option value="server2">SQL Server 2</option>--\x3e\r\n      \x3c!-- Add more servers as needed --\x3e\r\n    \x3c!--</select>\r\n  </div>--\x3e\r\n  <app-database-selector></app-database-selector>\r\n  </header>\r\n'},"sG/y":function(e,r,n){"use strict";n.r(r),r.default="/* Add any specific styles for the SQL script viewer here */\r\n.table {\r\n    width: 100%;\r\n  }\r\n.row {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-right: -15px;\r\n    margin-left: 0px;\r\n \r\n  }\r\n.header {\r\n    font-weight: bold;\r\n  }\r\n.cell {\r\n    padding: 8px;\r\n  }\r\npre {\r\n    white-space: pre-wrap; /* Ensures the script wraps and is readable */\r\n  }\r\n  "},y1Th:function(e,r,n){"use strict";n.r(r),r.default='\x3c!-- <amexio-accordion [multi-open]="true">\r\n    <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Tables" [active]="true">\r\n      <p-table [columns]="cols" [value]="tables" dataKey="tableName" [paginator]="true" [rows]="10">  \r\n        <ng-template pTemplate="header" let-columns>\r\n          <tr>\r\n            <th style="width: 4em"></th>\r\n            <th>Table Name</th>\r\n            <th>Description</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-expanded="expanded" let-columns="columns">\r\n          <tr>\r\n            <td>\r\n              <a href="#" [pRowToggler]="rowData">\r\n                <i [ngClass]="expanded ? \'pi pi-chevron-down\' : \'pi pi-chevron-right\'"></i>\r\n              </a>\r\n            </td>\r\n            <td class="cell">{{rowData.tableName}}</td>\r\n            <td class="cell">{{rowData.extendedPropertyValue}}</td>\r\n          </tr>\r\n        </ng-template>  \r\n        <ng-template pTemplate="rowexpansion" let-rowData let-columns="columns">\r\n          <tr>\r\n            <td [attr.colspan]="columns.length + 1">\r\n              <div class="table">\r\n                <div class="row header">\r\n                  <div class="cell">Column Name</div>\r\n                  <div class="cell">Description</div>\r\n                </div>\r\n                <div class="row" *ngFor="let columndetails of rowData.tableColumns">\r\n                  <div class="cell">{{columndetails.columnName}}</div>\r\n                  <div class="cell">{{columndetails.extendedPropertyValue}}</div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </td>\r\n          </tr>\r\n        </ng-template>  \r\n      </p-table>\r\n    </amexio-accordion-tab>\r\n  </amexio-accordion>\r\n   --\x3e\r\n\r\n   <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" header="Store Procerdure Extended Properties" [gradient]="true" [active]="true">\r\n    <div class="table">\r\n      <div class="row header">\r\n        <div class="cell">Store Procedures</div>\r\n        <div class="cell">Extended Properties Value</div> \r\n      </div> \r\n      <div *ngFor="let description of storedProcedures" class="row">\r\n        <div class="cell">{{description.storedProcedure}}</div>\r\n        <div class="cell">{{description.extendedProperty}}</div>\r\n      </div>\r\n    </div>\r\n  </amexio-accordion-tab>'},yMMS:function(e,r,n){"use strict";n.r(r),r.default=".table {\n  margin: 0px 0 3px 0;\n  width: 100%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  display: table;\n}\n\n@media screen and (max-width: 580px) {\n  .table {\n    display: block;\n  }\n}\n\n.row {\n  display: table-row;\n  background: #f6f6f6;\n}\n\n.row:nth-of-type(odd) {\n    background: #e9e9e9;\n  }\n\n.row.header {\n    font-weight: 900;\n    color: #ffffff;\n    background: #184569 !important;\n  }\n\n.row.green {\n    background: #27ae60;\n  }\n\n.row.blue {\n    background: #2980b9;\n  }\n\n@media screen and (max-width: 580px) {\n  .row {\n    padding: 14px 0 7px;\n    display: block;\n  }\n\n    .row.header {\n      padding: 0;\n      height: 6px;\n    }\n\n      .row.header .cell {\n        display: none;\n      }\n\n    .row .cell {\n      margin-bottom: 10px;\n    }\n\n      .row .cell:before {\n        margin-bottom: 3px;\n        content: attr(data-title);\n        min-width: 98px;\n        font-size: 10px;\n        line-height: 10px;\n        font-weight: bold;\n        text-transform: uppercase;\n        color: #969696;\n        display: block;\n      }\n}\n\n.cell {\n  /*  padding: 6px 12px; */\n  display: table-cell;\n}\n\n@media screen and (max-width: 580px) {\n  .cell {\n    padding: 2px 16px;\n    display: block;\n  }\n}\n"},ydAp:function(e,r,n){"use strict";n.r(r),r.default='<amexio-accordion [multi-open]="true">\r\n  <amexio-accordion-tab amexioColorPalette [color-palette]="\'\'" [gradient]="true" header="Tables" [active]="true">\r\n    <p-table [columns]="cols" [value]="tables" dataKey="tableName" [paginator]="true" [rows]="10">  \r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th style="width: 4em"></th>\r\n          <th>Table Name</th>\r\n          <th>Description</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-expanded="expanded" let-columns="columns">\r\n        <tr>\r\n          <td>\r\n            <a href="#" [pRowToggler]="rowData">\r\n              <i [ngClass]="expanded ? \'pi pi-chevron-down\' : \'pi pi-chevron-right\'"></i>\r\n            </a>\r\n          </td>\r\n          <td class="cell">{{rowData.tableName}}</td>\r\n          <td class="cell">{{rowData.extendedPropertyValue}}</td>\r\n        </tr>\r\n      </ng-template>  \r\n      <ng-template pTemplate="rowexpansion" let-rowData let-columns="columns">\r\n        <tr>\r\n          <td [attr.colspan]="columns.length + 1">\r\n            <div class="table">\r\n              <div class="row header">\r\n                <div class="cell">Column Name</div>\r\n                <div class="cell">Description</div>\r\n              </div>\r\n              <div class="row" *ngFor="let columndetails of rowData.tableColumns">\r\n                <div class="cell">{{columndetails.columnName}}</div>\r\n                <div class="cell">{{columndetails.extendedPropertyValue}}</div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </td>\r\n        </tr>\r\n      </ng-template>  \r\n    </p-table>\r\n  </amexio-accordion-tab>\r\n</amexio-accordion>\r\n'},ydRk:function(e,r,n){"use strict";n.r(r),r.default="<p>views works!</p>\r\n"},zPvY:function(e,r,n){"use strict";n.r(r),r.default=""},zUnb:function(e,r,n){"use strict";n.r(r);var t=n("8Y7J"),a=n("wAiw"),i=n("mrSG"),o=n("SVse"),l=n("cUpR"),s=n("s7LF"),c=n("IheW"),d=n("omvX"),p=n("Wuec"),u=n("m4cR"),b=n("HHV2"),v=n("iInd"),f=function(){return _createClass((function e(r,n,t,a,i){_classCallCheck(this,e),this.route=r,this.apiUrl=t,this.anotherUrl=a,this.ngxLoader=i,this.iblnShowPages=!1,this.isDisabled=!0,this.useTransition=!0,this.dblClickTime=0,this.logMessages=[],this.status=!1,this.iblnHiddeLeftMenu=!1,this.http=n,console.log(this.apiUrl),console.log(this.anotherUrl),this.istrlogiggedUserName=""}),[{key:"ngAfterViewInit",value:function(){}},{key:"ngOnDestroy",value:function(){}},{key:"ngOnInit",value:function(){}},{key:"log",value:function(e,r){switch(this.logMessages.push({type:e,text:"".concat(new Date," > ").concat(e," event > ").concat(JSON.stringify(r))}),e){case"gutterDblClick":case"gutterClick":this.status=!this.status}}}])}();f.ctorParameters=function(){return[{type:v.e},{type:c.b},{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:String,decorators:[{type:t.C,args:["ANOTHER_URL"]}]},{type:b.c}]},i.a([Object(t.mb)("area1",{static:!1})],f.prototype,"mySplitEl1",void 0),i.a([Object(t.mb)("area2",{static:!1})],f.prototype,"mySplitEl2",void 0),f=i.a([Object(t.o)({selector:"app-root",changeDetection:t.k.OnPush,host:{class:"split-example-page"},template:i.b(n("VzVu")).default,styles:[i.b(n("A3xY")).default]}),i.c(2,Object(t.C)("API_URL")),i.c(3,Object(t.C)("ANOTHER_URL"))],f);var m=n("zlRY"),h=n("G0yt"),g=n("LqlI"),x=n("z16Y"),y=n("99iz"),w=n("hhfa"),P=n("KnEf"),C=n("ZRSf"),k=n("sE7/"),D=n("HEhh"),S=n("8aBz"),O=n("c/fn"),j=n("7zpP"),T=n("T7Ec"),E=n("Pxif"),_=n("8Zpt"),M=function(){return _createClass((function e(){_classCallCheck(this,e)}),[{key:"ngOnInit",value:function(){}}])}();M=i.a([Object(t.o)({selector:"app-main-page",template:i.b(n("20Ps")).default,styles:[i.b(n("HJxH")).default]})],M);var I=function(){return _createClass((function e(){_classCallCheck(this,e)}),[{key:"onChangeServer",value:function(e){var r=e.target.value;console.log("Selected SQL Server:",r)}}])}();I=i.a([Object(t.o)({selector:"app-header",template:i.b(n("s+rH")).default,styles:[i.b(n("bFcN")).default]})],I);var L=_createClass((function e(){_classCallCheck(this,e)}));L=i.a([Object(t.o)({selector:"app-footer",template:i.b(n("A/qk")).default,styles:[i.b(n("45n4")).default]})],L);var N=n("LRne"),U=n("un/a"),A=n("JIr8"),R=function(){return _createClass((function e(r,n,t){_classCallCheck(this,e),this.primaryUrl=r,this.secondaryUrl=n,this.http=t}),[{key:"loadTableMetadata",value:function(e){var r="".concat(this.primaryUrl,"/Tables/GetTableMetaData?tableName=").concat(e),n="Tables/GetTableMetaData?tableName="+e,t=this.http.get(r).pipe(Object(U.a)(2)),a=this.http.get(n).pipe(Object(U.a)(2));return t.pipe(Object(A.a)((function(e){return console.error("Primary API URL failed after retries:",e),a.pipe(Object(A.a)((function(e){return console.error("Secondary API URL failed after retries:",e),Object(N.a)(null)})))})))}},{key:"updateTableExtendedProperties",value:function(e){return this.http.post(this.primaryUrl+"/UpdateTableExtendedProperties",e)}},{key:"updateTableColumnExtendedProperty",value:function(e){return this.http.post(this.primaryUrl+"/UpdateTableColumnExtendedProperty",e)}}])}();R.ctorParameters=function(){return[{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:String,decorators:[{type:t.C,args:["ANOTHER_URL"]}]},{type:c.b}]},R=i.a([Object(t.D)({providedIn:"root"}),i.c(0,Object(t.C)("API_URL")),i.c(1,Object(t.C)("ANOTHER_URL"))],R);var z=function(){return _createClass((function e(r,n,t){_classCallCheck(this,e),this.tableService=r,this.http=n,this.cd=t,this.tableName="HumanResources.Employee",this.columns=[],this.tableFragmentations=[],this.createScript={script:""},this.descriptions=[],this.indices=[],this.foreignKeys=[],this.properties=[],this.selectedDescription={name:"",value:"",table:""},this.selectedColumn={tableName:"",columnName:"",key:"",identity:"",dataType:"",maxLength:"",allowNulls:"",default:"",description:"",descriptionname:"",extendedPropertyName:"",extendedPropertyValue:""},this.language="plsql"}),[{key:"ngOnInit",value:function(){this.loadTableMetadata(),this.loadData()}},{key:"loadData",value:function(){this.hasEditPermission=!0}},{key:"ngAfterViewInit",value:function(){window.Prism.highlightAll()}},{key:"loadTableMetadata",value:function(){var e=this;this.tableService.loadTableMetadata(this.tableName).subscribe({next:function(r){return r?e.handleLoadSuccess(r):null},error:function(r){return e.handleLoadError(r)}})}},{key:"handleLoadSuccess",value:function(e){this.descriptions=e.descriptions,this.columns=e.columns,this.createScript=e.createScript,this.indices=e.indices,this.foreignKeys=e.foreignKeys,this.properties=e.properties,this.tableconstraint=e.constraint,this.tableFragmentations=e.tableFragmentations,this.filesTree=JSON.parse(e.tableDependenciesTree)}},{key:"handleLoadError",value:function(e){console.error(e)}},{key:"editDescription",value:function(e){this.selectedDescription=_objectSpread({},e),this.displayDialog=!0}},{key:"saveDescription",value:function(){var e=this,r=this.descriptions.findIndex((function(r){return r.name===e.selectedDescription.name&&r.table===e.selectedDescription.table}));-1!==r&&(this.descriptions[r]=_objectSpread({},this.selectedDescription),this.tableService.updateTableExtendedProperties(this.selectedDescription).subscribe({next:function(){return e.displayDialog=!1},error:function(e){return console.error("Error:",e)}}))}},{key:"cancelEdit",value:function(){this.displayDialog=!1}},{key:"editColumnDescription",value:function(e){this.selectedColumn=_objectSpread({},e),this.displayColumnDialog=!0}},{key:"saveColumnDescription",value:function(){var e=this,r=this.columns.findIndex((function(r){return r.tableName===e.selectedColumn.tableName&&r.columnName===e.selectedColumn.columnName}));-1!==r&&(this.columns[r]=_objectSpread({},this.selectedColumn),this.tableService.updateTableColumnExtendedProperty(this.selectedColumn).subscribe({next:function(){return e.displayColumnDialog=!1},error:function(e){return console.error("Error:",e)}}))}},{key:"cancelColumnEdit",value:function(){this.displayColumnDialog=!1}}])}();z.ctorParameters=function(){return[{type:R},{type:c.b},{type:t.l}]},z=i.a([Object(t.o)({selector:"app-table",template:i.b(n("1dAZ")).default,styles:[i.b(n("8EKO")).default]})],z);var F=n("GS7A"),B=function(){return _createClass((function e(r,n,t){_classCallCheck(this,e),this.http=r,this.primaryUrl=n,this.secondaryUrl=t}),[{key:"ngOnInit",value:function(){this.cols=[{field:"tableName",header:"extendedPropertyValue"},{field:"extendedPropertyValue",header:"tableColumns"}],this.loadTablesMetadata()}},{key:"loadTablesMetadata",value:function(){var e=this,r=this.primaryUrl+"/Tables/GetTableDetails";this.http.get(r).subscribe((function(r){return e.handleLoadSuccess(r)}),(function(r){console.error("Primary URL failed, trying secondary URL:",r),e.http.get("Tables/GetTableDetails").subscribe((function(r){return e.handleLoadSuccess(r)}),(function(r){return e.handleLoadError(r)}))}))}},{key:"handleLoadSuccess",value:function(e){this.tables=e}},{key:"handleLoadError",value:function(e){console.error(e)}}])}();B.ctorParameters=function(){return[{type:c.b},{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:String,decorators:[{type:t.C,args:["ANOTHER_URL"]}]}]},B=i.a([Object(t.o)({selector:"app-tables",template:i.b(n("ydAp")).default,animations:[Object(F.m)("rowExpansionTrigger",[Object(F.j)("void",Object(F.k)({transform:"translateX(-10%)",opacity:0})),Object(F.j)("active",Object(F.k)({transform:"translateX(0)",opacity:1})),Object(F.l)("* <=> *",Object(F.e)("400ms cubic-bezier(0.86, 0, 0.07, 1)"))])],styles:[i.b(n("nuPB")).default]}),i.c(1,Object(t.C)("API_URL")),i.c(2,Object(t.C)("ANOTHER_URL"))],B);var H=n("YHJu"),V=n("ypNx"),G=function(){return _createClass((function e(){_classCallCheck(this,e),this.save=new t.x,this.cancel=new t.x}),[{key:"saveDescription",value:function(){this.save.emit()}},{key:"cancelEdit",value:function(){this.cancel.emit()}}])}();i.a([Object(t.G)()],G.prototype,"displayDialog",void 0),i.a([Object(t.G)()],G.prototype,"selectedDescription",void 0),i.a([Object(t.G)()],G.prototype,"hasEditPermission",void 0),i.a([Object(t.S)()],G.prototype,"save",void 0),i.a([Object(t.S)()],G.prototype,"cancel",void 0),G=i.a([Object(t.o)({selector:"app-edit-description-dialog",template:i.b(n("AMUZ")).default,styles:[i.b(n("iZmm")).default]})],G);var K=function(){return _createClass((function e(){_classCallCheck(this,e),this.saveColumnDescription=new t.x,this.cancelColumnEdit=new t.x}),[{key:"saveDescription",value:function(){this.saveColumnDescription.emit()}},{key:"cancelEdit",value:function(){this.cancelColumnEdit.emit()}}])}();i.a([Object(t.G)()],K.prototype,"displayColumnDialog",void 0),i.a([Object(t.G)()],K.prototype,"selectedColumn",void 0),i.a([Object(t.S)()],K.prototype,"saveColumnDescription",void 0),i.a([Object(t.S)()],K.prototype,"cancelColumnEdit",void 0),K=i.a([Object(t.o)({selector:"app-edit-column-description-dialog",template:i.b(n("dIbF")).default,styles:[i.b(n("YBPu")).default]})],K);var q=_createClass((function e(){_classCallCheck(this,e)}));i.a([Object(t.G)()],q.prototype,"script",void 0),q=i.a([Object(t.o)({selector:"app-sql-script-viewer",template:i.b(n("lQhO")).default,styles:[i.b(n("sG/y")).default]})],q);var X=_createClass((function e(r,n){_classCallCheck(this,e),this.apiUrl=r,this.anotherUrl=n}));X.ctorParameters=function(){return[{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:String,decorators:[{type:t.C,args:["ANOTHER_URL"]}]}]},X=i.a([Object(t.D)({providedIn:"root"}),i.c(0,Object(t.C)("API_URL")),i.c(1,Object(t.C)("ANOTHER_URL"))],X);var Y=_createClass((function e(){_classCallCheck(this,e)}));Y=i.a([Object(t.L)({declarations:[z,B,G,K,q],imports:[o.b,l.a,s.b,m.b,m.d,m.a,m.c,P.a,C.a,D.a,S.a,j.a,T.a,E.a,u.a,k.a,O.a,H.a,V.a],providers:[w.f,w.c,R,X],exports:[z,B],schemas:[t.j]})],Y);var Z=function(){return _createClass((function e(r,n,t){_classCallCheck(this,e),this.http=r,this.primaryUrl=n,this.secondaryUrl=t}),[{key:"getDatabaseMetaData",value:function(){var e=this,r=this.primaryUrl+"/Database/database-meta-data";return this.http.get(r).pipe(Object(A.a)((function(r){return console.error("Primary URL failed, trying secondary URL:",r),e.http.get("Database/database-meta-data").pipe(Object(A.a)((function(e){return console.error("Secondary URL also failed:",e),Object(N.a)(null)})))})))}},{key:"changeDatabase",value:function(e){return this.http.post(this.primaryUrl+"/Database/ChangeDatabase",{databaseName:e})}}])}();Z.ctorParameters=function(){return[{type:c.b},{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:String,decorators:[{type:t.C,args:["ANOTHER_URL"]}]}]},Z=i.a([Object(t.D)({providedIn:"root"}),i.c(1,Object(t.C)("API_URL")),i.c(2,Object(t.C)("ANOTHER_URL"))],Z);var W=_createClass((function e(){_classCallCheck(this,e),this.icon="",this.label="",this.visible=!0}));i.a([Object(t.G)()],W.prototype,"icon",void 0),i.a([Object(t.G)()],W.prototype,"label",void 0),i.a([Object(t.G)()],W.prototype,"count",void 0),i.a([Object(t.G)()],W.prototype,"visible",void 0),W=i.a([Object(t.o)({selector:"app-object-type-item",template:i.b(n("54qw")).default})],W);var J=function(){return _createClass((function e(r){_classCallCheck(this,e),this.databaseMetadataService=r,this.objectTypeItems=[]}),[{key:"ngOnInit",value:function(){this.loadDatabaseMetadata()}},{key:"loadDatabaseMetadata",value:function(){var e=this;this.databaseMetadataService.getDatabaseMetaData().subscribe({next:function(r){r&&(e.databaseMetaData=r,e.initializeObjectTypeItems())},error:function(r){return e.handleLoadError(r)}})}},{key:"initializeObjectTypeItems",value:function(){var e=[{icon:"Table.png",label:"Tables",data:this.databaseMetaData.tablesMetadata},{icon:"View.png",label:"View",data:this.databaseMetaData.viewMetadata},{icon:"StoredProcedure.png",label:"Stored Procedure",data:this.databaseMetaData.procedureInfos},{icon:"Function_Table.png",label:"Table-Valued Functions",data:this.databaseMetaData.tableFunctionInfos},{icon:"Function_Scalar.png",label:"Scalar-Valued Functions",data:this.databaseMetaData.scalarFunctionInfos},{icon:"DdlTrigger.png",label:"Database Triggers",data:this.databaseMetaData.triggerInfos},{icon:"UserDefinedDataType.png",label:"User-Defined Data Types",data:this.databaseMetaData.userTypes},{icon:"XmlSchemaCollection.png",label:"XML Schema Collections",data:this.databaseMetaData.dbXmlSchemas}];this.objectTypeItems=e.map((function(e){return{icon:"./assets/icons/"+e.icon,label:e.label,count:e.data.length,visible:!!e.data.length}}))}},{key:"handleLoadError",value:function(e){console.error("Failed to load database metadata:",e)}}])}();J.ctorParameters=function(){return[{type:Z}]},J=i.a([Object(t.o)({selector:"app-database-details",template:i.b(n("4Ori")).default,styles:[i.b(n("KVNU")).default]})],J);var Q=_createClass((function e(){_classCallCheck(this,e)}));Q=i.a([Object(t.L)({declarations:[J,W],imports:[o.b,m.b,m.d,m.a,m.c,P.a,C.a,D.a,S.a,O.a,j.a,T.a,E.a,u.a],providers:[w.f,w.c,Z],exports:[J]})],Q);var $=function(){return _createClass((function e(r,n,t){_classCallCheck(this,e),this.http=r,this.primaryUrl=n,this.secondaryUrl=t}),[{key:"loadLeftMenuData",value:function(){var e=this,r=this.primaryUrl+"/LeftMenu/left-menu";return this.http.get(r).pipe(Object(A.a)((function(r){return console.error("Primary URL failed, trying secondary URL:",r),e.http.get("LeftMenu/left-menu").pipe(Object(A.a)((function(e){return console.error("Both primary and secondary URLs failed:",e),Object(N.a)(null)})))})))}}])}();$.ctorParameters=function(){return[{type:c.b},{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:String,decorators:[{type:t.C,args:["ANOTHER_URL"]}]}]},$=i.a([Object(t.D)({providedIn:"root"}),i.c(1,Object(t.C)("API_URL")),i.c(2,Object(t.C)("ANOTHER_URL"))],$);var ee=function(){return _createClass((function e(r){_classCallCheck(this,e),this.leftMenuService=r}),[{key:"ngOnInit",value:function(){this.loadLeftMenuData()}},{key:"loadLeftMenuData",value:function(){var e=this;this.leftMenuService.loadLeftMenuData().subscribe((function(r){return e.handleLoadSuccess(r)}),(function(r){return e.handleLoadError(r)}))}},{key:"handleLoadSuccess",value:function(e){this.leftmenujsonvalues=e}},{key:"handleLoadError",value:function(e){console.error(e)}},{key:"getNodeData",value:function(e){}}])}();ee.ctorParameters=function(){return[{type:$}]},ee=i.a([Object(t.o)({selector:"app-leftmenu",template:i.b(n("6G/g")).default})],ee);var re=function(){return _createClass((function e(r,n){_classCallCheck(this,e),this.http=n,this.baseUrl="",this.baseUrl=r+"/StoredProcedure"}),[{key:"getAllStoredProcedures",value:function(){return this.http.get(this.baseUrl+"/AllStoredProcedures")}},{key:"getStoredProcedureMetadata",value:function(e){return this.http.get("".concat(this.baseUrl,"/").concat(e,"/metadata"))}},{key:"mergeStoredProcedureDescription",value:function(e){return this.http.post(this.baseUrl+"/description",e)}},{key:"mergeParameterDescription",value:function(e){return this.http.post(this.baseUrl+"/parameter/description",e)}}])}();re.ctorParameters=function(){return[{type:String,decorators:[{type:t.C,args:["API_URL"]}]},{type:c.b}]},re=i.a([Object(t.D)({providedIn:"root"}),i.c(0,Object(t.C)("API_URL"))],re);var ne=function(){return _createClass((function e(r){_classCallCheck(this,e),this.storedProcedureService=r,this.storedProcedures=[],this.isLoading=!0,this.errorMessage=""}),[{key:"ngOnInit",value:function(){this.loadStoredProcedures()}},{key:"loadStoredProcedures",value:function(){var e=this;this.storedProcedureService.getAllStoredProcedures().subscribe({next:function(r){e.storedProcedures=r},error:function(e){return console.error("Error fetching stored procedures:",e)}})}}])}();ne.ctorParameters=function(){return[{type:re}]},ne=i.a([Object(t.o)({selector:"app-procedures",template:i.b(n("y1Th")).default,styles:[i.b(n("yMMS")).default]})],ne);var te=function(){return _createClass((function e(r){_classCallCheck(this,e),this.storedProcedureService=r,this.storedProcedureName="HumanResources.uspUpdateEmployeeHireInfo",this.iblnShowEditBox=!1,this.language="plsql",this.iblnLoading=!1}),[{key:"ngOnInit",value:function(){this.loadMetadata()}},{key:"getSchema",value:function(){return this.storedProcedureName.split(".")[0]||""}},{key:"getStoreprocedureName",value:function(){return this.storedProcedureName.split(".")[1]||""}},{key:"loadMetadata",value:function(){var e=this;this.storedProcedureService.getStoredProcedureMetadata(this.storedProcedureName).subscribe({next:function(r){e.iblnLoading=!0,e.storedProcedureMetadata=r,e.filesTree=JSON.parse(r.storedProcedureDependenciesTree),QP.showPlan(document.getElementById("container"),""+e.storedProcedureMetadata.executionPlan.queryPlan,{jsTooltips:!0})},error:function(e){return console.error("Error fetching metadata:",e)}})}},{key:"toggleEditBox",value:function(){this.iblnShowEditBox=!this.iblnShowEditBox}},{key:"CancelStoreProcMsDesciption",value:function(){this.iblnShowEditBox=!1}},{key:"updateProcedureDescription",value:function(){var e=this;if(this.storedProcedureMetadata.storedProcedureInfo.extendedProperty){var r={schemaName:this.getSchema(),storedProcedureName:this.getStoreprocedureName(),description:this.storedProcedureMetadata.storedProcedureInfo.extendedProperty};this.storedProcedureService.mergeStoredProcedureDescription(r).subscribe({next:function(){console.log("Stored procedure description updated successfully"),e.toggleEditBox()},error:function(e){return console.error("Error updating description:",e)}})}else console.error("No description available to update.")}},{key:"updateParameterDescription",value:function(e){var r=this,n={schemaName:this.getSchema(),storedProcedureName:this.getStoreprocedureName(),parameterName:e.parameterName,description:e.extendedProperty};this.storedProcedureService.mergeParameterDescription(n).subscribe({next:function(){console.log("Parameter description updated successfully"),r.toggleParameterEdit(e)},error:function(e){return console.error("Error updating parameter description:",e)}})}},{key:"toggleParameterEdit",value:function(e){e.isEditing=!e.isEditing}}])}();te.ctorParameters=function(){return[{type:re}]},te=i.a([Object(t.o)({selector:"app-procedure",template:i.b(n("WBBz")).default,styles:[i.b(n("XdeO")).default]})],te);var ae=_createClass((function e(){_classCallCheck(this,e)}));ae=i.a([Object(t.L)({declarations:[ne,te],imports:[o.b,l.a,s.b,c.c,m.b,m.d,m.a,m.c,P.a,D.a,S.a,j.a,T.a,E.a,u.a,O.a,H.a,V.a,k.a],providers:[re],exports:[ne,te],schemas:[t.j]})],ae);var ie=function(){return _createClass((function e(){_classCallCheck(this,e)}),[{key:"ngOnInit",value:function(){}}])}();ie=i.a([Object(t.o)({selector:"app-views",template:i.b(n("ydRk")).default,styles:[i.b(n("zPvY")).default]})],ie);var oe=function(){return _createClass((function e(){_classCallCheck(this,e)}),[{key:"ngOnInit",value:function(){}}])}();oe=i.a([Object(t.o)({selector:"app-view",template:i.b(n("eXlM")).default,styles:[i.b(n("QNDt")).default]})],oe);var le=function(){return _createClass((function e(r){_classCallCheck(this,e),this.databaseService=r,this.selectedDatabase=""}),[{key:"ngOnInit",value:function(){throw new Error("Method not implemented.")}},{key:"onChangeDatabase",value:function(){this.databaseService.changeDatabase(this.selectedDatabase).subscribe((function(e){console.log(e),alert(e.message)}))}}])}();le.ctorParameters=function(){return[{type:Z}]},le=i.a([Object(t.o)({selector:"app-database-selector",template:i.b(n("1wH8")).default,styles:[i.b(n("AOA5")).default]})],le);var se=_createClass((function e(){_classCallCheck(this,e)}));function ce(){return"http://localhost:5000"}function de(){return"https://localhost:5001"}se=i.a([Object(t.L)({declarations:[f,M,I,L,ee,ie,oe,le],imports:[l.a.withServerTransition({appId:"ng-cli-universal"}),c.c,s.b,s.h,m.b,m.d,m.a,m.c,x.a,d.a,y.a.forRoot(),v.f.forRoot([],{useHash:!0}),p.a,D.a,o.b,S.a,O.a,j.a,T.a,E.a,P.a,C.a,h.a,k.a,u.a,c.c,b.b.forRoot({bgsColor:"#1c749a",bgsOpacity:.7,bgsPosition:"center-center",bgsSize:80,bgsType:"ball-spin-clockwise",blur:5,delay:0,fgsColor:"#1c749a",fgsPosition:"center-center",fgsSize:60,fgsType:"ball-spin-clockwise",gap:10,logoPosition:"center-center",logoSize:120,logoUrl:"",masterLoaderId:"master",overlayBorderRadius:"0",overlayColor:"rgba(40, 40, 40, 0.8)",pbColor:"red",pbDirection:"ltr",pbThickness:1,hasProgressBar:!0,text:"Loading",textColor:"#FFFFFF",textPosition:"center-center",maxTime:-1,minTime:300}),b.a,g.a.forRoot(),_.a,Y,Q,ae],providers:[{provide:o.h,useClass:o.e},w.f,w.c],bootstrap:[f]})],se),n.d(r,"getApiUrl",(function(){return ce})),n.d(r,"getAnotherUrl",(function(){return de}));var pe=[{provide:"API_URL",useFactory:ce,deps:[]},{provide:"ANOTHER_URL",useFactory:de,deps:[]}];Object(t.tb)(),Object(a.a)(pe).bootstrapModule(se).catch((function(e){return console.log(e)}))}},[[0,0,5]]]);
//# sourceMappingURL=main-es5.92b4f95abe840944759b.js.map